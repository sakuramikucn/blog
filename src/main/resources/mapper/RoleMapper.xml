<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sakuramiku.lightblog.mapper.RoleMapper">

    <resultMap id="BaseResultMap" type="cn.sakuramiku.lightblog.entity.Role">
        <id column="role_id" jdbcType="BIGINT" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="name"/>
        <result column="role_desc" jdbcType="VARCHAR" property="desc"/>
        <result column="role_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="role_modified_time" jdbcType="TIMESTAMP" property="modifiedTime"/>
        <collection property="rights" javaType="list" ofType="cn.sakuramiku.lightblog.entity.Right"
                    column="role_id" select="queryRights"/>
    </resultMap>

    <select id="queryRights" parameterType="long" resultType="cn.sakuramiku.lightblog.entity.Right"
            resultMap="cn.sakuramiku.lightblog.mapper.RightMapper.BaseResultMap">
        select
        <include refid="cn.sakuramiku.lightblog.mapper.RightMapper.Base_Column_List"/>
        from role_right
        left join `right` on role_right.right_id = `right`.id
        where role_right.role_id = #{role_id}
    </select>

    <sql id="Base_Column_List">
        `role`.id as role_id,
        `role`.`name` as role_name,
        `role`.`desc` as role_desc,
        `role`.create_time as role_create_time,
        `role`.modified_time as role_modified_time
    </sql>

    <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `role`
        where role.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="find" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `role`
        <where>
            <if test="null != keyword">
                and ( `role`.name like CONCAT('%',#{keyword},'%') or `role`.`desc` like CONCAT('%',#{keyword},'%') )
            </if>
        </where>
    </select>
    <select id="find_COUNT" resultType="long">
        select count(0)
        from `role`
        <where>
            <if test="null != keyword and '' != keyword ">
                and ( `role`.name like CONCAT('%',#{keyword},'%') or `role`.`desc` like CONCAT('%',#{keyword},'%') )
            </if>
        </where>
    </select>

    <select id="search" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_role
        left join `role` on user_role.role_id = role.id
        <where>
            user_role.user_id = #{userId}
            <if test="null != keyword and '' != keyword">
                and ( `role`.name like CONCAT('%',#{keyword},'%') or `role`.`desc` like CONCAT('%',#{keyword},'%') )
            </if>
        </where>
    </select>
    <select id="search_COUNT" resultType="long">
        select count(0)
        from user_role
        left join `role` on user_role.role_id = role.id
        <where>
            user_role.user_id = #{userId}
            <if test="null != keyword and '' != keyword">
                and ( `role`.name like CONCAT('%',#{keyword},'%') or `role`.`desc` like CONCAT('%',#{keyword},'%') )
            </if>
        </where>
    </select>

    <select id="getUserCount" parameterType="long" resultType="java.lang.Long">
        select COUNT(0) from user_role where role_id = #{roleId}
    </select>

    <delete id="delete">
        delete
        from `role`
        where role.id = #{id,jdbcType=BIGINT};
    </delete>

    <delete id="deleteForUser" parameterType="long">
        delete from user_role where user_id = #{userId}
    </delete>

    <insert id="add" parameterType="cn.sakuramiku.lightblog.entity.Role">
        insert into `role`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="null != desc">
                `desc`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="null != desc">
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <insert id="insert">
        insert into user_role(user_id, role_id)
        values (#{userId}, #{roleId})
    </insert>

    <update id="update" parameterType="cn.sakuramiku.lightblog.entity.Role">
        update `role`
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="null != desc">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <insert id="batchInsert" parameterType="list">
        insert into user_role(user_id, role_id) VALUES
        <foreach collection="list" index="key" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.originId},#{item.targetId}
            </trim>
        </foreach>
    </insert>

</mapper>