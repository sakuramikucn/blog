<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sakuramiku.lightblog.mapper.TagMapper">

    <resultMap id="BaseResultMap" type="cn.sakuramiku.lightblog.entity.Tag">
        <id column="tag_id" jdbcType="BIGINT" property="id"/>
        <result column="tag_name" jdbcType="VARCHAR" property="name"/>
        <result column="tag_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="tag_modified_time" jdbcType="TIMESTAMP" property="modifiedTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        tag.`id` as tag_id,
        tag.`name` as tag_name,
        tag.create_time as tag_create_time,
        tag.modified_time as tag_modified_time
    </sql>

    <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tag
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="search" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tag
        <where>
            <if test="null != keyword and '' != keyword">
                and tag.name like concat('%',#{keyword,jdbcType=VARCHAR},'%')
            </if>
            <if test="null != begin and null != end">
                and tag.create_time between #{begin,jdbcType=TIMESTAMP} and #{end,jdbcType=TIMESTAMP}
            </if>
        </where>
        order by create_time DESC
    </select>
    <select id="search_COUNT" resultMap="BaseResultMap">
        select count(0)
        from tag
        <where>
            <if test="null != keyword and '' != keyword">
                and tag.name like concat('%',#{keyword,jdbcType=VARCHAR},'%')
            </if>
            <if test="null != begin and null != end">
                and tag.create_time between #{begin,jdbcType=TIMESTAMP} and #{end,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>

    <select id="find" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from article_tag
        left join tag on tag.id = article_tag.tag_id
        <where>
            article_tag.article_id = #{articleId,jdbcType=BIGINT}
            <if test="null != keyword and '' != keyword">
                and tag.name like concat('%',#{keyword,jdbcType=VARCHAR},'%')
            </if>
            <if test="null != begin and null != end">
                and tag.create_time between #{begin,jdbcType=TIMESTAMP} and #{end,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>
    <select id="find_COUNT" resultType="long">
        select count(0)
        from article_tag
        <where>
            article_tag.article_id = #{articleId,jdbcType=BIGINT}
            <if test="null != keyword and '' != keyword">
                and tag.name like concat('%',#{keyword,jdbcType=VARCHAR},'%')
            </if>
            <if test="null != begin and null != end">
                and tag.create_time between #{begin,jdbcType=TIMESTAMP} and #{end,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>

    <delete id="delete" parameterType="java.lang.Long">
        delete
        from tag
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="cn.sakuramiku.lightblog.entity.Tag">
        insert into tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="name != null">
                `name`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=BIGINT},
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <insert id="batchInsert" parameterType="List">
        insert into article_tag(article_id, tag_id) values
        <foreach collection="list" index="key" item="item" separator=",">
            <trim prefix="(" suffixOverrides="," suffix=")">
                #{item.originId},#{item.targetId}
            </trim>
        </foreach>
    </insert>

    <update id="update">
        update tag
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>