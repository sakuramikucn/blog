<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sakuramiku.lightblog.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="cn.sakuramiku.lightblog.entity.User">
        <id column="user_id" jdbcType="BIGINT" property="id"/>
        <id column="user_username" jdbcType="VARCHAR" property="username"/>
        <result column="user_nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="user_state" jdbcType="TINYINT" property="state"/>
        <result column="user_email" jdbcType="VARCHAR" property="email"/>
        <result column="user_last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="user_last_login_ip" jdbcType="VARCHAR" property="lastLoginIp"/>
        <result column="user_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="user_modified_time" jdbcType="TIMESTAMP" property="modifiedTime"/>
        <collection property="roles" ofType="cn.sakuramiku.lightblog.entity.Role"
                    resultMap="cn.sakuramiku.lightblog.mapper.RoleMapper.BaseResultMap"/>
    </resultMap>

    <sql id="Base_Column_List">
        `user`.id AS user_id,
        `user`.username AS user_username,
        `user`.nick_name AS user_nick_name,
        `user`.`state` AS user_state,
        `user`.email AS user_email,
        `user`.last_login_time AS user_last_login_time,
        `user`.last_login_ip AS user_last_login_ip,
        `user`.create_time AS user_create_time,
        `user`.modified_time AS user_modified_time
    </sql>

    <sql id="User_Column_List">
        <include refid="Base_Column_List"/>,
        <include refid="cn.sakuramiku.lightblog.mapper.RoleMapper.Base_Column_List"/>
    </sql>

    <select id="get" resultMap="BaseResultMap">
        select
        <include refid="User_Column_List"/>
        from `user`
        left join user_role on `user`.id = user_role.user_id
        left join `role` on user_role.role_id = role.id
        left join role_right on role.id = role_right.role_id
        left join `right` on role_right.right_id = `right`.id
        <where>
            <if test="null != id">
                `user`.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="null != username">
                username = #{username,jdbcType=BIGINT}
            </if>
            <if test="null == id and null == username">
                1 = 2;
            </if>
        </where>
    </select>

    <select id="search" resultMap="BaseResultMap">
        select
        <include refid="User_Column_List"/>
        from `user`
        left join user_role on `user`.id = user_role.user_id
        left join `role` on user_role.role_id = role.id
        left join role_right on role.id = role_right.role_id
        left join `right` on role_right.right_id = `right`.id
        <where>
            <if test="null != keyword and '' != keyword ">
                u.nick_name like CONCAT('%',#{keyword},'%') or u.username like CONCAT('%',#{keyword},'%')
            </if>
        </where>
    </select>
    <select id="search_COUNT" resultType="long">
        select count(0)
        from `user`
        <where>
            <if test="null != keyword and '' != keyword ">
                nick_name like CONCAT('%',#{keyword},'%') or username like CONCAT('%',#{keyword},'%')
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="cn.sakuramiku.lightblog.entity.User">
        insert into `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,username,
            <if test="state != null">
                `state`,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="lastLoginIp != null">
                last_login_ip,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginIp != null">
                #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="cn.sakuramiku.lightblog.entity.User">
        update `user`
        <set>
            <if test="state != null">
                `state` = #{state,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginIp != null">
                last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
            </if>
        </set>
        <where>
            <if test="null != id">
                id = #{id,jdbcType=BIGINT}
            </if>
            <if test="null != username and '' != username">
                or username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="null == id and (null == username or '' == username)">
                false
            </if>
        </where>
    </update>

</mapper>